# Getting started
# See https://snapcraft.io/docs/getting-started
# Snapcraft references
# See https://snapcraft.io/docs/snapcraft-yaml-reference
name: ctrlx-node-datalayer-client
version: "1.0.0"
summary: ctrlX Data Layer client sample written in Node.js for ctrlX CORE.
description: |
  The sample demonstrates how to read values from ctrlX Data Layer tree and write out the values to console. 
  A subscription is used to get values by data change event in a deterministic publish interval. 
  The single read is performed every 10 seconds in an endless loop.
confinement: strict
#confinement: devmode
#icon: assets/icons/ICONHERE.png
grade: stable # must be 'stable' to release into candidate/stable channels
base: core22
type: app

apps:
  app:
    command: bin/app
    daemon: simple
    # interfaces to connect to https://snapcraft.io/docs/supported-interfaces
    plugs: [network, datalayer]
    restart-condition: always
    passthrough:
      restart-delay: 10s

parts:
  app:
    source: .
    build-environment:
      # Set the node version here. We recommend to use the latest LTS version.
      - NODE_VERSION: "18.17.0"

    # We don't use the npm plugin here, because it has no X-build capability (can't build arm64 target snaps on amd64).
    # plugin: npm
    # npm-node-version: "18.17.0"
    plugin: nil
    override-build: |

      # set target arch
      if [ $SNAPCRAFT_TARGET_ARCH == "arm64" ]; then
          arch="arm64"
      else 
          arch="x64"
      fi     

      # fetch node
      node_uri="https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-${arch}.tar.gz"
      echo fetching: $node_uri

      if [ ! -f "${SNAPCRAFT_PART_INSTALL}/bin/node" ]; then
          curl $node_uri | tar xzf - -C $SNAPCRAFT_PART_INSTALL/ --no-same-owner --strip-components=1
      fi

      # install and compile (tsc -> ./dist)
      npm install --ignore-scripts --no-fund --unsafe-perm
      npm run tsc

      # pack and install the app (only production)
      npm install -g --prefix $SNAPCRAFT_PART_INSTALL $(npm pack . | tail -1) --ignore-scripts --omit=dev --no-fund --unsafe-perm

      # remove ctrlx-datalayer prebuilds of unused archs to reduce snap size
      package_name=$(npm run getName -s)
      prebuilds_location="${SNAPCRAFT_PART_INSTALL}/lib/node_modules/${package_name}/node_modules/ctrlx-datalayer/prebuilds"
      find ${prebuilds_location} -type f -not -ipath "*/linux-${arch}*" -delete

      # remove unused node_modules
      rm -rf ${SNAPCRAFT_PART_INSTALL}/lib/node_modules/npm
      rm -rf ${SNAPCRAFT_PART_INSTALL}/lib/node_modules/corepack

# describes which interface slots are supported by defining the plugs
plugs:
  datalayer:
    interface: content
    content: datalayer
    target: $SNAP_DATA/.datalayer
